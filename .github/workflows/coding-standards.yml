name: PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  coding-standards-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the commit SHA
        id: commit-sha
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Get list of changed files
        id: changed-files
        uses: actions/github-script@v6
        with:
          script: |
            const baseSha = context.payload.before;
            const headSha = context.payload.after;
            const { data: comparison } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: baseSha,
              head: headSha,
            });
            const changedFiles = comparison.files.map(file => file.filename);
            console.log(`Changed files: ${JSON.stringify(changedFiles)}`);
            core.setOutput('changedFiles', JSON.stringify(changedFiles));
      - name: Send changed files to endpoint
        run: |
          changed_files=$(echo '${{ steps.changed-files.outputs.changedFiles }}' | jq -r '.[]')

          curl_cmd="curl --location 'http://192.168.20.166:5002/pr_push_check/css_validation_api' --header 'Content-Type: multipart/form-data' --form threshold=0.4 --form repo_name='${{ github.repository }}' --form owner_name='${{ github.repository_owner }}' --form pr_number='${{ github.event.number }}'"

          file_paths=()

          for file in $changed_files; do
            if [ -f "$file" ]; then
              curl_cmd="$curl_cmd --form files=@$file"
              file_paths+=("$file") 
            fi
          done

          if [ ${#file_paths[@]} -gt 0 ]; then
              curl_cmd="$curl_cmd --form files_paths=@$file_paths"
          fi

          echo "Executing: $curl_cmd"
          response=$(eval $curl_cmd)

          echo "Response: $response"

# --form 'files=@"/C:/Users/Mohak Khatri/Desktop/comment_script/repo/new.py"'
